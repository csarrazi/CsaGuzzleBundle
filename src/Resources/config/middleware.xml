<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="csa_guzzle.middleware.stopwatch" class="Closure">
            <factory class="Csa\Bundle\GuzzleBundle\GuzzleHttp\Middleware" method="stopwatch" />
            <argument type="service" id="debug.stopwatch" />
            <tag name="csa_guzzle.middleware" alias="stopwatch" />
        </service>

        <service id="csa_guzzle.middleware.history" class="Closure">
            <factory class="Csa\Bundle\GuzzleBundle\GuzzleHttp\Middleware" method="history" />
            <argument type="service" id="csa_guzzle.data_collector.history_bag" />
            <tag name="csa_guzzle.middleware" alias="history" priority="-1000" />
        </service>

        <service id="csa_guzzle.middleware.logger" class="Closure">
            <factory class="GuzzleHttp\Middleware" method="log" />
            <argument type="service" id="logger" />
            <argument type="service" id="csa_guzzle.logger.message_formatter" />
            <argument /> <!-- Logger level -->
            <tag name="csa_guzzle.middleware" alias="logger" />
        </service>

        <service id="csa_guzzle.logger.message_formatter" class="GuzzleHttp\MessageFormatter" public="false">
            <argument /> <!-- Format template -->
        </service>

        <service id="csa_guzzle.middleware.cache" class="Closure">
            <factory class="Csa\Bundle\GuzzleBundle\GuzzleHttp\Middleware" method="cache" />
            <argument type="service" id="csa_guzzle.cache_adapter" />
            <tag name="csa_guzzle.middleware" alias="cache" priority="-1500" />
        </service>

        <service id="csa_guzzle.middleware.tolerance" class="Closure">
            <factory class="Csa\Bundle\GuzzleBundle\GuzzleHttp\Middleware" method="tolerance" />
            <argument type="service" id="csa_guzzle.tolerance.waiter_factory" />
            <argument type="service" id="csa_guzzle.tolerance.error_voter" />
            <tag name="csa_guzzle.middleware" alias="tolerance" priority="-900" />
        </service>

        <service id="csa_guzzle.tolerance.waiter_factory" class="Tolerance\Bridge\Guzzle\Waiter\WaiterFactory">
        </service>

        <service id="csa_guzzle.tolerance.error_voter" class="Tolerance\Bridge\Guzzle\Operation\ExceptionCatcher\RequestServerErrorVoter">
        </service>

    </services>

</container>
