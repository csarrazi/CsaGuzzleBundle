{% extends '@WebProfiler/Profiler/layout.html.twig' %}

{% block toolbar %}
    {% set callCount = collector.calls|length %}
    {% set errorCount = collector.errors|length %}

    {% set cacheHitCount = 0 %}
    {% set cacheMissCount = 0 %}

    {% for call in collector.calls|filter(call => call.cache is defined and call.cache == 'HIT') %}
        {% if call.cache == 'HIT' %}
            {% set cacheHitCount = cacheHitCount + 1 %}
        {% else %}
            {% set cacheMissCount = cacheMissCount + 1 %}
        {% endif %}
    {% endfor %}

    {% set mockReplayCount = 0 %}
    {% set mockRecordCount = 0 %}

    {% for call in collector.calls|filter(call => call.mock is defined) %}
        {% if call.mock == 'REPLAY' %}
            {% set mockReplayCount = mockReplayCount + 1 %}
        {% else %}
            {% set mockRecordCount = mockRecordCount + 1 %}
        {% endif %}
    {% endfor %}

    {% if callCount == 0 %}
        {% set color_code = '' %}
    {% elseif errorCount > 0 %}
        {% set color_code = 'red' %}
    {% else %}
        {% set color_code = 'green' %}
    {% endif %}

    {% set icon %}
        {{ include('@CsaGuzzle/Icon/guzzle.svg') }}
        <span class="sf-toolbar-value">{{ callCount }}</span>
        {% if collector.totalTime > 0 %}
            <span class="sf-toolbar-label">
                in <span class="sf-toolbar-value">{{ collector.totalTime|csa_guzzle_format_duration }}</span>
            </span>
        {% endif %}
    {% endset %}

    {% set text %}
        <div class="sf-toolbar-info-piece">
            <b>Success</b>
            <span class="sf-toolbar-status sf-toolbar-status-green">{{ callCount - errorCount }}</span>
        </div>
        {% if cacheHitCount %}
            <div class="sf-toolbar-info-piece">
                <b>Cache HIT</b>
                <span class="sf-toolbar-status sf-toolbar-status-green">{{ cacheHitCount }}</span>
            </div>
        {% endif %}
        {% if cacheMissCount %}
            <div class="sf-toolbar-info-piece">
                <b>Cache MISS</b>
                <span class="sf-toolbar-status sf-toolbar-status-yellow">{{ cacheMissCount }}</span>
            </div>
        {% endif %}
        {% if mockReplayCount %}
            <div class="sf-toolbar-info-piece">
                <b>Mocks (replayed)</b>
                <span class="sf-toolbar-status sf-toolbar-status-green">{{ mockReplayCount }}</span>
            </div>
        {% endif %}
        {% if mockRecordCount %}
            <div class="sf-toolbar-info-piece">
                <b>Mocks (recorded)</b>
                <span class="sf-toolbar-status sf-toolbar-status-green">{{ mockRecordCount }}</span>
            </div>
        {% endif %}
        {% if errorCount %}
            <div class="sf-toolbar-info-piece">
                <b>Errors</b>
                <span class="sf-toolbar-status sf-toolbar-status-red">{{ errorCount }}</span>
            </div>
        {% endif %}
    {% endset %}

    {{ include('@WebProfiler/Profiler/toolbar_item.html.twig', { link: 'guzzle', status: color_code }) }}
{% endblock %}

{% block head %}
    {{ parent() }}
    <style>{{ include('@CsaGuzzle/css/screen.min.css') }}</style>
    <script>{{ include('@CsaGuzzle/js/guzzle.min.js') }}</script>
{% endblock %}

{% block menu %}
    <span class="label {% if collector.errors|length > 0 %}label-status-error{% endif %}">
        <span class="icon">
            {{ include('@CsaGuzzle/Icon/guzzle.svg') }}

        </span>
        <strong>{{ collector.name|capitalize|default('HTTP calls') }}</strong>
        {% if collector.calls is not empty %}
            <span class="count">
                <span>{{ collector.calls|length }}</span>
                {% if collector.totalTime > 0 %}
                    <span>{{ collector.totalTime|csa_guzzle_format_duration }}</span>
                {% endif %}
            </span>
        {% endif %}
    </span>
{% endblock %}

{% block panel %}
    <h2>{{ (collector.name|capitalize)|default('HTTP calls') }}</h2>
    {{  include('@CsaGuzzle/Calls/list.html.twig', { calls: collector.calls }) }}
{% endblock %}
